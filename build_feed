#!/bin/bash

set -ex

if [ "$1" == "incontainer" ]; then
  INSTR_SET="$(ls build_dir | awk -F'-|(_musl)' '{print $2}')"
  if [ -d "bin/packages/$INSTR_SET" ]
  then
    echo "$INSTR_SET was built before. Skip";
    exit 0;
  fi
  echo "$FEED_LINE" >> feeds.conf.default

  # the grep pipes further down would otherwise be buffered
  unbuf="stdbuf --output=0 --error=0"
  {
    ./scripts/feeds update -a # alternatively: -p luci falter
    ./scripts/feeds install -a -p "$FEED_NAME"
    make defconfig
    for pkg in $(find feeds/$FEED_NAME -name Makefile | awk -F/ '{print $(NF - 1)}'); do
      make -j8 V=s "package/$pkg/compile"
    done
    make package/index V=s
  } |& $unbuf grep -v 'warning: ignoring type redefinition' \
    | $unbuf grep -v 'warning: defaults for choice' \
    | $unbuf grep -v "linux/Makefile' has a dependency"
else
  SDK_TAG="$1"
  FEED_LINE="$2"
  OUTPUT_DIR="$3"

  FEED_NAME=$(echo $FEED_LINE | awk '{print $2}')
  IMAGE="openwrtorg/sdk:$SDK_TAG"

  docker pull "$IMAGE"
  mkdir -p "$OUTPUT_DIR"
  if [ -n "$4" ]; then # Parallel build on buildbot needs to be performed without -i. Otherwise it won't work.
    docker run --rm \
      -v "$(pwd)/build_feed:/home/build/openwrt/build_feed" \
      -v "$OUTPUT_DIR/:/home/build/openwrt/bin" \
      -e "FEED_LINE=$FEED_LINE" \
      -e "FEED_NAME=$FEED_NAME" \
      "$IMAGE" \
      ./build_feed incontainer
  else
    docker run -it --rm \
      -v "$(pwd)/build_feed:/home/build/openwrt/build_feed" \
      -v "$OUTPUT_DIR/:/home/build/openwrt/bin" \
      -e "FEED_LINE=$FEED_LINE" \
      -e "FEED_NAME=$FEED_NAME" \
      "$IMAGE" \
      ./build_feed incontainer
    fi
fi

